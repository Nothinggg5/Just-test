local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local ScreenGui
local MainFrame
local tabPages = {}

local function createUI()
    if ScreenGui then
        ScreenGui:Destroy()
    end

    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ProExploitGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.Enabled = true

    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 700, 0, 480)
    MainFrame.BackgroundColor3 = Color3.fromRGB(36, 38, 47)  -- статичный фон
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    MainFrame.Visible = true

    -- Header
    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Size = UDim2.new(1, 0, 0, 48)
    Header.BackgroundColor3 = Color3.fromRGB(41, 44, 58) -- чуть темнее шапка
    Header.BorderSizePixel = 0
    Header.Parent = MainFrame

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Text = "Pro UI Library"
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 24
    TitleLabel.TextColor3 = Color3.fromRGB(210, 210, 222)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 12, 0, 8)
    TitleLabel.Size = UDim2.new(0, 220, 0, 32)
    TitleLabel.Parent = Header

    -- Dragging logic
    local dragging = false
    local dragStart = nil
    local startPos = nil
    Header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    -- TabsBar
    local TabsBar = Instance.new("Frame")
    TabsBar.Size = UDim2.new(1, -40, 0, 44)
    TabsBar.Position = UDim2.new(0, 20, 0, 56)
    TabsBar.BackgroundColor3 = Color3.fromRGB(34, 38, 51) -- ниже Header и чуть светлее
    TabsBar.BorderSizePixel = 0
    TabsBar.Parent = MainFrame

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.Padding = UDim.new(0, 16)
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Parent = TabsBar

    -- Content container
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Size = UDim2.new(1, -40, 1, -120)
    ContentFrame.Position = UDim2.new(0, 20, 0, 108)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = MainFrame

    tabPages = {}

    local function createTab(name, pageLabelText)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 142, 0, 40)
        btn.BackgroundColor3 = Color3.fromRGB(49, 51, 65) -- темно-серый
        btn.BorderSizePixel = 0
        btn.Text = name
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 18
        btn.TextColor3 = Color3.fromRGB(222, 228, 242) -- светлый серо-голубой
        btn.AutoButtonColor = false
        btn.Parent = TabsBar

        local page = Instance.new("Frame")
        page.Size = UDim2.new(1, 0, 1, 0)
        page.BackgroundTransparency = 0
        page.BackgroundColor3 = Color3.fromRGB(39, 41, 54) -- страницы тоже спокойные
        page.Visible = false
        page.Parent = ContentFrame

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = pageLabelText
        label.Font = Enum.Font.GothamBold
        label.TextSize = 26
        label.TextColor3 = Color3.fromRGB(180, 185, 210)
        label.TextTransparency = 0.02
        label.Parent = page

        btn.MouseButton1Click:Connect(function()
            for _, v in pairs(tabPages) do
                v.page.Visible = false
                v.button.BackgroundColor3 = Color3.fromRGB(49, 51, 65)
                v.button.TextColor3 = Color3.fromRGB(222,228,242)
                v.button.TextStrokeTransparency = 1
            end
            page.Visible = true
            btn.BackgroundColor3 = Color3.fromRGB(85, 105, 160)  -- мягкий светлый акцент
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.TextStrokeTransparency = 0.7
        end)
        tabPages[#tabPages + 1] = {button = btn, page = page, label = label}
    end

    createTab("Main", "Главная страница")
    createTab("Settings", "Настройки")
    createTab("Credits", "Кредиты")

    if tabPages[1] then
        tabPages.page.Visible = true
        tabPages.button.BackgroundColor3 = Color3.fromRGB(85, 105, 160)
        tabPages.button.TextColor3 = Color3.fromRGB(255,255,255)
    end

    local function createButton(parent, text, callback)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 160, 0, 40)
        button.BackgroundColor3 = Color3.fromRGB(54, 60, 78)
        button.BorderSizePixel = 0
        button.Text = text
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.TextColor3 = Color3.fromRGB(236, 239, 250)
        button.Parent = parent

        button.AutoButtonColor = false

        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(85, 105, 160)}):Play()
            TweenService:Create(button, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(255,255,255)}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(54, 60, 78)}):Play()
            TweenService:Create(button, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(236,239,250)}):Play()
        end)
        button.MouseButton1Click:Connect(callback)
        return button
    end

    local function createToggle(parent, text, initialState, callback)
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 160, 0, 40)
        frame.BackgroundTransparency = 1
        frame.Parent = parent

        local label = Instance.new("TextLabel")
        label.Text = text
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(230, 232, 245)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 18
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = frame

        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(0, 40, 0, 24)
        toggle.Position = UDim2.new(0.75, 0, 0.2, 0)
        toggle.BackgroundColor3 = initialState and Color3.fromRGB(110, 160, 110) or Color3.fromRGB(100, 100, 120)
        toggle.Text = ""
        toggle.Parent = frame

        local state = initialState

        toggle.MouseEnter:Connect(function()
            TweenService:Create(toggle, TweenInfo.new(0.13), {BackgroundColor3 = Color3.fromRGB(120, 170, 140)}):Play()
        end)
        toggle.MouseLeave:Connect(function()
            TweenService:Create(toggle, TweenInfo.new(0.13), {BackgroundColor3 = state and Color3.fromRGB(110, 160, 110) or Color3.fromRGB(100,100,120)}):Play()
        end)
        toggle.MouseButton1Click:Connect(function()
            state = not state
            TweenService:Create(toggle, TweenInfo.new(0.15), {BackgroundColor3 = state and Color3.fromRGB(110,160,110) or Color3.fromRGB(100,100,120)}):Play()
            if callback then callback(state) end
        end)
        return frame
    end

    local function createSlider(parent, text, minValue, maxValue, initialValue, callback)
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 320, 0, 40)
        frame.BackgroundTransparency = 1
        frame.Parent = parent

        local label = Instance.new("TextLabel")
        label.Text = text
        label.Size = UDim2.new(0.3, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.fromRGB(230, 235, 255)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 18
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = frame

        local sliderBar = Instance.new("Frame")
        sliderBar.Size = UDim2.new(0.65, 0, 0, 30)
        sliderBar.Position = UDim2.new(0.35, 0, 0.5, -15)
        sliderBar.BackgroundColor3 = Color3.fromRGB(53, 56, 74)
        sliderBar.BorderSizePixel = 0
        sliderBar.Parent = frame

        local sliderFill = Instance.new("Frame")
        sliderFill.Size = UDim2.new((initialValue - minValue) / (maxValue - minValue), 0, 0, 12)
        sliderFill.Position = UDim2.new(0, 0, 0.5, -6)
        sliderFill.BackgroundColor3 = Color3.fromRGB(117, 123, 169)
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderBar

        local dragging = false

        local function tweenSliderFill(value)
            local targetSize = UDim2.new(value, 0, 0, 12)
            TweenService:Create(sliderFill, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = targetSize}):Play()
        end

        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                local relativeX = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
                local value = (relativeX / sliderBar.AbsoluteSize.X)
                tweenSliderFill(value)
                if callback then
                    callback((minValue + value * (maxValue - minValue)))
                end
            end
        end)
        frame.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        frame.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
                local value = (relativeX / sliderBar.AbsoluteSize.X)
                tweenSliderFill(value)
                if callback then
                    callback((minValue + value * (maxValue - minValue)))
                end
            end
        end)
        return frame
    end

    local settingsPage = tabPages[2].page

    local UIListLayoutSettings = Instance.new("UIListLayout")
    UIListLayoutSettings.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutSettings.Padding = UDim.new(0, 16)
    UIListLayoutSettings.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayoutSettings.Parent = settingsPage
    UIListLayoutSettings.HorizontalAlignment = Enum.HorizontalAlignment.Left

    createButton(settingsPage, "Нажми меня", function()
        print("Кнопка нажата!")
    end)

    createToggle(settingsPage, "Тумблер", false, function(state)
        print("Состояние тумблера:", state)
    end)

    createSlider(settingsPage, "Слайдер", 0, 100, 0.5, function(value)
        print("Значение слайдера:", math.floor(value))
    end)

    createButton(settingsPage, "Выключить GUI", function()
        ScreenGui:Destroy()
    end)
end

createUI()
