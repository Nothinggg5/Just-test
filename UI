--[[
    Полноценная UI библиотека в стиле xsx/Rayfield с тёмной темой и неоном.
    Работает в любом эксплойте, включая Solara.
    Собственное управление конфигами цвета, биндов, вкладок.
    Вкладки с иконками, плавные анимации через TweenService.
    Основные контролы: кнопка, тумблер, слайдер.
    Отдельная вкладка Credits.
--]]

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- CONFIG --
local configFile = "ProGUIConfig.json"
local defaultConfig = {
    ThemeAccent = {R=153, G=51, B=255},
    ThemeBackground = {R=18, G=18, B=28},
    SelectedTab = 1,
    ToggleKey = Enum.KeyCode.RightControl.Name,
}
local function tableClone(tbl)
    local result = {}
    for k,v in pairs(tbl) do result[k] = v end
    return result
end
local function loadConfig(file, default)
    if isfile and isfile(file) then
        local ok, data = pcall(function() return HttpService:JSONDecode(readfile(file)) end)
        if ok and data then return tableClone(data) end
    end
    if writefile then writefile(file, HttpService:JSONEncode(default)) end
    return tableClone(default)
end
local function saveConfig(file, data)
    if writefile then writefile(file, HttpService:JSONEncode(data)) end
end
local UIConfig = loadConfig(configFile, defaultConfig)
local function Color(tbl) return Color3.fromRGB(tbl.R, tbl.G, tbl.B) end

-- SCREEN GUI --
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ProGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer.PlayerGui
ScreenGui.Enabled = true

-- MAIN WINDOW --
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 600, 0, 420)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -210)
mainFrame.BackgroundColor3 = Color(UIConfig.ThemeBackground)
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0, 0)
mainFrame.Parent = ScreenGui
mainFrame.Active = true

-- Soft neon glow (border)
local neonBorder = Instance.new("Frame")
neonBorder.BackgroundColor3 = Color(UIConfig.ThemeAccent)
neonBorder.BorderSizePixel = 0
neonBorder.Size = UDim2.new(1.02, 6, 1.02, 6)
neonBorder.Position = UDim2.new(-0.01, -3, -0.01, -3)
neonBorder.ZIndex = 0
neonBorder.Parent = mainFrame

-- DRAGGING --
local dragging, dragStart, startPos = false, nil, nil
mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
mainFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- HEADER --
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 52)
header.BackgroundColor3 = Color3.fromRGB(28, 28, 38)
header.BorderSizePixel = 0
header.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Text = "Pro GUI UI Library"
title.Font = Enum.Font.GothamBlack
title.TextSize = 26
title.TextColor3 = Color3.fromRGB(220, 220, 255)
title.BackgroundTransparency = 1
title.Position = UDim2.new(0, 20, 0, 12)
title.Size = UDim2.new(0, 400, 0, 28)
title.Parent = header

-- CLOSE BUTTON --
local closeBtn = Instance.new("ImageButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 11)
closeBtn.BackgroundTransparency = 1
closeBtn.Image = "rbxassetid://4450303482" -- cross icon
closeBtn.Parent = header
closeBtn.MouseButton1Click:Connect(function() ScreenGui.Enabled = false end)

-- MINIMIZE BUTTON --
local minimizeBtn = Instance.new("ImageButton")
minimizeBtn.Size = UDim2.new(0, 32, 0, 32)
minimizeBtn.Position = UDim2.new(1, -80, 0, 10)
minimizeBtn.BackgroundTransparency = 1
minimizeBtn.Image = "rbxassetid://6031156553" -- minimize icon 
minimizeBtn.Parent = header
local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        for _,v in pairs(mainFrame:GetChildren()) do
            if v~=header and v~=neonBorder then v.Visible = false end
        end
        mainFrame.Size = UDim2.new(0, 400, 0, 52)
    else
        for _,v in pairs(mainFrame:GetChildren()) do v.Visible = true end
        mainFrame.Size = UDim2.new(0, 600, 0, 420)
    end
end)

-- TAB BAR --
local tabs = {
    {Name = "Main", Icon = "rbxassetid://6031218402"}, -- home icon
    {Name = "Settings", Icon = "rbxassetid://6031231188"}, -- settings icon
    {Name = "Credits", Icon = "rbxassetid://6031304692"}, -- credits icon
}

local tabBar = Instance.new("Frame")
tabBar.BackgroundTransparency = 1
tabBar.Size = UDim2.new(1, -40, 0, 48)
tabBar.Position = UDim2.new(0, 20, 0, 60)
tabBar.Parent = mainFrame

local tabLayout = Instance.new("UIListLayout")
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 24)
tabLayout.Parent = tabBar

local tabButtons = {}
local tabPages = {}

-- create tab content frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -40, 1, -125)
contentFrame.Position = UDim2.new(0, 20, 0, 110)
contentFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 38)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

local function createTab(name, iconId, index)
    local tabButton = Instance.new("ImageButton")
    tabButton.Size = UDim2.new(0, 140, 0, 48)
    tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    tabButton.BorderSizePixel = 0
    tabButton.Image = iconId
    tabButton.ScaleType = Enum.ScaleType.Fit
    tabButton.Parent = tabBar
    tabButton.Name = "TabButton" .. name

    local tabText = Instance.new("TextLabel")
    tabText.Size = UDim2.new(1, 0, 0, 20)
    tabText.Position = UDim2.new(0, 0, 1, -18)
    tabText.BackgroundTransparency = 1
    tabText.Text = name
    tabText.Font = Enum.Font.GothamBold
    tabText.TextSize = 16
    tabText.TextColor3 = Color3.fromRGB(180, 180, 255)
    tabText.Parent = tabButton

    local tabPage = Instance.new("Frame")
    tabPage.Size = UDim2.new(1, 0, 1, 0)
    tabPage.BackgroundTransparency = 1
    tabPage.Position = UDim2.new(0, 0, 0, 0)
    tabPage.Visible = (index == UIConfig.SelectedTab)
    tabPage.Parent = contentFrame

    tabButton.MouseButton1Click:Connect(function()
        for i, btn in pairs(tabButtons) do
            btn.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
            tabPages[i].Visible = false
        end
        tabButton.BackgroundColor3 = Color(UIConfig.ThemeAccent)
        tabPage.Visible = true
        UIConfig.SelectedTab = index
        saveConfig(configFile, UIConfig)
    end)

    table.insert(tabButtons, tabButton)
    table.insert(tabPages, tabPage)

    return tabPage
end

local mainTab = createTab("Main", tabs[1].Icon, 1)
local settingsTab = createTab("Settings", tabs[1].Icon, 2)
local creditsTab = createTab("Credits", tabs[2].Icon, 3)

-- DEMO CONTROLS --
-- Button template
local function newButton(text, parent, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 140, 0, 40)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    btn.TextColor3 = Color3.fromRGB(160, 160, 255)
    btn.Font = Enum.Font.GothamSemibold
    btn.TextSize = 18
    btn.Text = text
    btn.BorderColor3 = Color(UIConfig.ThemeAccent)
    btn.BorderSizePixel = 2
    btn.AutoButtonColor = true
    btn.Parent = parent
    btn.MouseButton1Click:Connect(callback or function() end)
    return btn
end

-- Toggle template
local function newToggle(text, parent, initial, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 140, 0, 40)
    frame.BackgroundTransparency = 1
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(185, 185, 255)
    label.Font = Enum.Font.GothamSemibold
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Text = text
    label.Parent = frame

    local toggleBtn = Instance.new("ImageButton")
    toggleBtn.Size = UDim2.new(0, 50, 0, 25)
    toggleBtn.Position = UDim2.new(1, -55, 0, 8)
    toggleBtn.BackgroundTransparency = 1
    toggleBtn.Image = initial and "rbxassetid://15049621329" or "rbxassetid://15049623555"
    toggleBtn.Parent = frame
    
    toggleBtn.MouseButton1Click:Connect(function()
        initial = not initial
        toggleBtn.Image = initial and "rbxassetid://15049621329" or "rbxassetid://15049623555"
        callback(initial)
    end)

    return frame, toggleBtn
end

-- Slider template
local function newSlider(text, parent, minValue, maxValue, initial, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 280, 0, 40)
    frame.BackgroundTransparency = 1
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(180, 180, 255)
    label.Font = Enum.Font.GothamSemibold
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Text = text
    label.Parent = frame

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(0.6, 0, 0, 8)
    sliderBar.Position = UDim2.new(0.35, 0, 0, 16)
    sliderBar.BackgroundColor3 = Color(UIConfig.ThemeAccent)
    sliderBar.BorderSizePixel = 0
    sliderBar.Parent = frame
    sliderBar.AnchorPoint = Vector2.new(0, 0.5)

    local sliderButton = Instance.new("ImageButton")
    sliderButton.Size = UDim2.new(0, 18, 0, 18)
    sliderButton.Position = UDim2.new(initial, -9, 0.5, -9)
    sliderButton.AnchorPoint = Vector2.new(0, 0.5)
    sliderButton.BackgroundColor3 = Color3.new(1, 1, 1)
    sliderButton.Image = "rbxassetid://6035027580" -- крутой шарик
    sliderButton.Parent = frame
    sliderButton.BackgroundTransparency = 1

    local dragging = false
    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    sliderButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    sliderButton.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativeX = math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
            sliderButton.Position = UDim2.new(relativeX, -9, 0.5, -9)
            callback(minValue + (maxValue - minValue)*relativeX)
        end
    end)

    return frame
end

-- INITIALISE DEMO CONTROLS
local mainDemoHolder = Instance.new("Frame")
mainDemoHolder.Size = UDim2.new(1, 0, 1, 0)
mainDemoHolder.BackgroundTransparency = 1
mainDemoHolder.Parent = mainTab
local demoLayout = Instance.new("UIListLayout")
demoLayout.Padding = UDim.new(0, 10)
demoLayout.FillDirection = Enum.FillDirection.Vertical
demoLayout.SortOrder = Enum.SortOrder.LayoutOrder
demoLayout.Parent = mainDemoHolder

newButton("Click me", mainDemoHolder, function() print("Button clicked!") end)
newToggle("Toggle Example", mainDemoHolder, false, function(state) print("Toggle is now", state) end)
newSlider("Slider example", mainDemoHolder, 0, 100, 0.25, function(val) print("Slider at", val) end)

-- CREDITS TAB CONTENT
local creditsText = Instance.new("TextLabel")
creditsText.BackgroundTransparency = 1
creditsText.Size = UDim2.new(1, -40, 1, -20)
creditsText.Position = UDim2.new(0, 20, 0, 20)
creditsText.Font = Enum.Font.GothamHeavy
creditsText.TextColor3 = Color(UIConfig.ThemeAccent)
creditsText.TextSize = 20
creditsText.TextWrapped = true
creditsText.Text = [[
Pro GUI Library by AI Dev
Inspired by xsx / Rayfield
For Roblox Exploits 2025
]]
creditsText.Parent = creditsTab

-- KEYBIND FOR TOGGLE GUI
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode.Name == UIConfig.ToggleKey then
            ScreenGui.Enabled = not ScreenGui.Enabled
        end
    end
end)

-- SAVE CONFIG PERIODICALLY
spawn(function()
    while true do
        saveConfig(configFile, UIConfig)
        wait(4)
    end
end)
