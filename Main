local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Plugin = {
    PluginName = "SmartNavigator",
    PluginDescription = "Умный tap-to-move, follow и pathfind с визуализацией мышления и стоп-краном",
    Commands = {}
}

-- Состояния
local smartTapEnabled = false
local currentMoveConnection
local currentFollowTask
local currentPathTask

-- Вспомогательные функции
local function drawDebugPath(points)
    for i = 1, #points - 1 do
        local a, b = points[i], points[i+1]
        local part = Instance.new("Part")
        part.Anchored = true
        part.CanCollide = false
        part.Size = Vector3.new(0.2, 0.2, (a - b).Magnitude)
        part.CFrame = CFrame.new((a + b) / 2, a) * CFrame.Angles(0, math.rad(90), 0)
        part.BrickColor = BrickColor.new("Bright yellow")
        part.Parent = workspace
        game.Debris:AddItem(part, 2)
    end
end

local function cancelCurrentTasks()
    if currentMoveConnection then
        currentMoveConnection:Disconnect()
        currentMoveConnection = nil
    end
    if currentFollowTask then
        currentFollowTask:Cancel()
        currentFollowTask = nil
    end
    if currentPathTask then
        currentPathTask:Cancel()
        currentPathTask = nil
    end
end

-- Команда stopmove
Plugin.Commands["stopmove"] = {
    ListName = "stopmove",
    Description = "Останавливает все действия и движения",
    Function = function(args, speaker)
        cancelCurrentTasks()
    end
}

-- SmartTap: tap-to-move с Pathfinding и toggle
Plugin.Commands["smarttap"] = {
    ListName = "smarttap",
    Description = "Включает/выключает умный tap-to-move",
    Function = function(args, speaker)
        smartTapEnabled = not smartTapEnabled
        local player = Players.LocalPlayer
        if smartTapEnabled then
            -- Подключаем событие клика
            currentMoveConnection = player:GetMouse().Button1Down:Connect(function()
                local mouse = player:GetMouse()
                local target = mouse.Hit.Position
                cancelCurrentTasks()
                -- Строим путь
                local path = PathfindingService:CreatePath({AgentRadius = 2, AgentHeight = 5, AgentCanJump = false})
                path:ComputeAsync(player.Character.HumanoidRootPart.Position, target)
                local waypoints = path:GetWaypoints()
                drawDebugPath(table.map(waypoints, function(w) return w.Position end))
                -- Запускаем движение
                for _, point in ipairs(waypoints) do
                    player.Character.Humanoid:MoveTo(point.Position)
                    if not player.Character.Humanoid.MoveToFinished:Wait() then break end
                end
            end)
        else
            cancelCurrentTasks()
        end
    end
}

-- SmartPath: движение к координатам
Plugin.Commands["smartpath"] = {
    ListName = "smartpath",
    Description = "Построить и пройти маршрут к указанным координатам: smartpath x y z",
    Function = function(args, speaker)
        local x, y, z = tonumber(args[1]), tonumber(args), tonumber(args)
        if not x or not y or not z then return end
        cancelCurrentTasks()
        local player = Players.LocalPlayer
        -- Асинхронная задача
        currentPathTask = task.spawn(function()
            local start = player.Character.HumanoidRootPart.Position
            local goal = Vector3.new(x, y, z)
            local path = PathfindingService:CreatePath({AgentRadius = 2, AgentHeight = 5, AgentCanJump = false})
            path:ComputeAsync(start, goal)
            local wps = path:GetWaypoints()
            drawDebugPath(table.map(wps, function(w) return w.Position end))
            for _, wp in ipairs(wps) do
                player.Character.Humanoid:MoveTo(wp.Position)
                if not player.Character.Humanoid.MoveToFinished:Wait() then break end
            end
        end)
    end
}

-- SmartFollow: следование за игроком/группой
Plugin.Commands["smartfollow"] = {
    ListName = "smartfollow",
    Description = "Следовать за целью: smartfollow <selector>",
    Function = function(args, speaker)
        local selector = args[1] or "me"
        cancelCurrentTasks()
        local player = Players.LocalPlayer
        -- Функция получения списка целей
        local function resolveTargets(sel)
            return Players:GetPlayersByNamePattern and Players:GetPlayersByNamePattern(sel) or {Players:FindFirstChild(sel) or player}
        end
        currentFollowTask = task.spawn(function()
            while smartTapEnabled or true do
                local targets = resolveTargets(selector)
                if #targets == 0 then break end
                local targetPos = targets[1].Character and targets.Character.PrimaryPart.Position
                if not targetPos then break end
                local path = PathfindingService:CreatePath({AgentRadius = 2, AgentHeight = 5, AgentCanJump = false})
                path:ComputeAsync(player.Character.PrimaryPart.Position, targetPos)
                local wps = path:GetWaypoints()
                drawDebugPath(table.map(wps, function(w) return w.Position end))
                for _, wp in ipairs(wps) do
                    player.Character.Humanoid:MoveTo(wp.Position)
                    if not player.Character.Humanoid.MoveToFinished:Wait() then break end
                end
                task.wait(0.5)
            end
        end)
    end
}

return Plugin
