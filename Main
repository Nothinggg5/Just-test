local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local SaveFileName = "rjp_position.json"

local function savePositionToFile(position)
    local data = HttpService:JSONEncode({x = position.X, y = position.Y, z = position.Z})
    writefile(SaveFileName, data)
end

local function loadPositionFromFile()
    if not isfile(SaveFileName) then return nil end
    local data = readfile(SaveFileName)
    local decoded = HttpService:JSONDecode(data)
    if decoded and decoded.x and decoded.y and decoded.z then
        return Vector3.new(decoded.x, decoded.y, decoded.z)
    end
    return nil
end

local Plugin = {
    PluginName = "RejoinPos",
    PluginDescription = "Перезаход с сохранением позиции локально",
    Commands = {
        ["rjp"] = {
            ListName = "rjp",
            Description = "Сохраняет позицию и пытается перезайти, иначе респавн с позицией",
            Function = function(args, speaker)
                if not speaker then return end
                if not speaker.Character then return end
                local hrp = speaker.Character:FindFirstChild("HumanoidRootPart")
                if not hrp then return end

                local pos = hrp.Position
                savePositionToFile(pos)

                local success, err = pcall(function()
                    TeleportService:Teleport(game.PlaceId, speaker)
                end)

                if not success then
                    warn("Teleport запрещён или не работает, выполняем LoadCharacter вместо него: ".. tostring(err))

                    local player = speaker
                    local connection
                    connection = player.CharacterAdded:Connect(function(char)
                        connection:Disconnect()
                        local hrpNew = char:WaitForChild("HumanoidRootPart", 10)
                        if hrpNew then
                            local savedPos = loadPositionFromFile()
                            if savedPos then
                                hrpNew.CFrame = CFrame.new(savedPos)
                            end
                        end
                    end)
                    player:LoadCharacter()
                end
            end,
        },
    },
}

return Plugin
